//  File doc/quickbook/oglplus/quickref/enums/pixel_data_internal_format_class.hpp
//
//  Automatically generated file, DO NOT modify manually.
//  Edit the source 'source/enums/oglplus/pixel_data_internal_format.txt'
//  or the 'source/enums/make_enum.py' script instead.
//
//  Copyright 2010-2015 Matus Chochlik.
//  Distributed under the Boost Software License, Version 1.0.
//  See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt
//
//[oglplus_enums_pixel_data_internal_format_class
#if !__OGLPLUS_NO_ENUM_VALUE_CLASSES
namespace enums {

template <typename Base, template<__PixelDataInternalFormat> class Transform>
class __EnumToClass<Base, __PixelDataInternalFormat, Transform> /*<
Specialization of __EnumToClass for the __PixelDataInternalFormat enumeration.
>*/
 : public Base
{
public:
	EnumToClass(void);
	EnumToClass(Base&& base);

	Transform<PixelDataInternalFormat::DepthComponent>
		DepthComponent;
	Transform<PixelDataInternalFormat::DepthStencil>
		DepthStencil;
	Transform<PixelDataInternalFormat::StencilIndex8>
		StencilIndex8;
	Transform<PixelDataInternalFormat::Red>
		Red;
	Transform<PixelDataInternalFormat::RG>
		RG;
	Transform<PixelDataInternalFormat::RGB>
		RGB;
	Transform<PixelDataInternalFormat::RGBA>
		RGBA;
	Transform<PixelDataInternalFormat::R8>
		R8;
	Transform<PixelDataInternalFormat::R8SNorm>
		R8SNorm;
	Transform<PixelDataInternalFormat::R16>
		R16;
	Transform<PixelDataInternalFormat::R16SNorm>
		R16SNorm;
	Transform<PixelDataInternalFormat::RG8>
		RG8;
	Transform<PixelDataInternalFormat::RG8SNorm>
		RG8SNorm;
	Transform<PixelDataInternalFormat::RG16>
		RG16;
	Transform<PixelDataInternalFormat::RG16SNorm>
		RG16SNorm;
	Transform<PixelDataInternalFormat::R3G3B2>
		R3G3B2;
	Transform<PixelDataInternalFormat::RGB4>
		RGB4;
	Transform<PixelDataInternalFormat::RGB5>
		RGB5;
	Transform<PixelDataInternalFormat::RGB8>
		RGB8;
	Transform<PixelDataInternalFormat::RGB8SNorm>
		RGB8SNorm;
	Transform<PixelDataInternalFormat::RGB10>
		RGB10;
	Transform<PixelDataInternalFormat::RGB12>
		RGB12;
	Transform<PixelDataInternalFormat::RGB16>
		RGB16;
	Transform<PixelDataInternalFormat::RGB16SNorm>
		RGB16SNorm;
	Transform<PixelDataInternalFormat::RGBA2>
		RGBA2;
	Transform<PixelDataInternalFormat::RGBA4>
		RGBA4;
	Transform<PixelDataInternalFormat::RGB5A1>
		RGB5A1;
	Transform<PixelDataInternalFormat::RGBA8>
		RGBA8;
	Transform<PixelDataInternalFormat::RGBA8SNorm>
		RGBA8SNorm;
	Transform<PixelDataInternalFormat::RGB10A2>
		RGB10A2;
	Transform<PixelDataInternalFormat::RGB10A2UI>
		RGB10A2UI;
	Transform<PixelDataInternalFormat::RGBA12>
		RGBA12;
	Transform<PixelDataInternalFormat::RGBA16>
		RGBA16;
	Transform<PixelDataInternalFormat::RGBA16SNorm>
		RGBA16SNorm;
	Transform<PixelDataInternalFormat::SRGB8>
		SRGB8;
	Transform<PixelDataInternalFormat::SRGB8Alpha8>
		SRGB8Alpha8;
	Transform<PixelDataInternalFormat::R16F>
		R16F;
	Transform<PixelDataInternalFormat::RG16F>
		RG16F;
	Transform<PixelDataInternalFormat::RGB16F>
		RGB16F;
	Transform<PixelDataInternalFormat::RGBA16F>
		RGBA16F;
	Transform<PixelDataInternalFormat::R32F>
		R32F;
	Transform<PixelDataInternalFormat::RG32F>
		RG32F;
	Transform<PixelDataInternalFormat::RGB32F>
		RGB32F;
	Transform<PixelDataInternalFormat::RGBA32F>
		RGBA32F;
	Transform<PixelDataInternalFormat::R11FG11FB10F>
		R11FG11FB10F;
	Transform<PixelDataInternalFormat::RGB9E5>
		RGB9E5;
	Transform<PixelDataInternalFormat::R8I>
		R8I;
	Transform<PixelDataInternalFormat::R8UI>
		R8UI;
	Transform<PixelDataInternalFormat::R16I>
		R16I;
	Transform<PixelDataInternalFormat::R16UI>
		R16UI;
	Transform<PixelDataInternalFormat::R32I>
		R32I;
	Transform<PixelDataInternalFormat::R32UI>
		R32UI;
	Transform<PixelDataInternalFormat::RG8I>
		RG8I;
	Transform<PixelDataInternalFormat::RG8UI>
		RG8UI;
	Transform<PixelDataInternalFormat::RG16I>
		RG16I;
	Transform<PixelDataInternalFormat::RG16UI>
		RG16UI;
	Transform<PixelDataInternalFormat::RG32I>
		RG32I;
	Transform<PixelDataInternalFormat::RG32UI>
		RG32UI;
	Transform<PixelDataInternalFormat::RGB8I>
		RGB8I;
	Transform<PixelDataInternalFormat::RGB8UI>
		RGB8UI;
	Transform<PixelDataInternalFormat::RGB16I>
		RGB16I;
	Transform<PixelDataInternalFormat::RGB16UI>
		RGB16UI;
	Transform<PixelDataInternalFormat::RGB32I>
		RGB32I;
	Transform<PixelDataInternalFormat::RGB32UI>
		RGB32UI;
	Transform<PixelDataInternalFormat::RGBA8I>
		RGBA8I;
	Transform<PixelDataInternalFormat::RGBA8UI>
		RGBA8UI;
	Transform<PixelDataInternalFormat::RGBA16I>
		RGBA16I;
	Transform<PixelDataInternalFormat::RGBA16UI>
		RGBA16UI;
	Transform<PixelDataInternalFormat::RGBA32I>
		RGBA32I;
	Transform<PixelDataInternalFormat::RGBA32UI>
		RGBA32UI;
	Transform<PixelDataInternalFormat::DepthComponent16>
		DepthComponent16;
	Transform<PixelDataInternalFormat::DepthComponent24>
		DepthComponent24;
	Transform<PixelDataInternalFormat::DepthComponent32>
		DepthComponent32;
	Transform<PixelDataInternalFormat::DepthComponent32F>
		DepthComponent32F;
	Transform<PixelDataInternalFormat::Depth24Stencil8>
		Depth24Stencil8;
	Transform<PixelDataInternalFormat::Depth32fStencil8>
		Depth32fStencil8;
	Transform<PixelDataInternalFormat::CompressedRed>
		CompressedRed;
	Transform<PixelDataInternalFormat::CompressedRG>
		CompressedRG;
	Transform<PixelDataInternalFormat::CompressedRGB>
		CompressedRGB;
	Transform<PixelDataInternalFormat::CompressedRGBA>
		CompressedRGBA;
	Transform<PixelDataInternalFormat::CompressedSRGB>
		CompressedSRGB;
	Transform<PixelDataInternalFormat::CompressedSRGBAlpha>
		CompressedSRGBAlpha;
	Transform<PixelDataInternalFormat::CompressedRedRGTC1>
		CompressedRedRGTC1;
	Transform<PixelDataInternalFormat::CompressedSignedRedRGTC1>
		CompressedSignedRedRGTC1;
	Transform<PixelDataInternalFormat::CompressedRGRGTC2>
		CompressedRGRGTC2;
	Transform<PixelDataInternalFormat::CompressedSignedRGRGTC2>
		CompressedSignedRGRGTC2;
	Transform<PixelDataInternalFormat::CompressedRGBABPTCUNorm>
		CompressedRGBABPTCUNorm;
	Transform<PixelDataInternalFormat::CompressedSRGBAlphaBPTCUNorm>
		CompressedSRGBAlphaBPTCUNorm;
	Transform<PixelDataInternalFormat::CompressedRGBBPTCSignedFloat>
		CompressedRGBBPTCSignedFloat;
	Transform<PixelDataInternalFormat::CompressedRGBBPTCUnsignedFloat>
		CompressedRGBBPTCUnsignedFloat;
	Transform<PixelDataInternalFormat::CompressedRGB8ETC2>
		CompressedRGB8ETC2;
	Transform<PixelDataInternalFormat::CompressedSRGB8ETC2>
		CompressedSRGB8ETC2;
	Transform<PixelDataInternalFormat::CompressedRGB8PunchthroughAlpha1ETC2>
		CompressedRGB8PunchthroughAlpha1ETC2;
	Transform<PixelDataInternalFormat::CompressedSRGB8PunchthroughAlpha1ETC2>
		CompressedSRGB8PunchthroughAlpha1ETC2;
	Transform<PixelDataInternalFormat::CompressedETC2EAC>
		CompressedETC2EAC;
	Transform<PixelDataInternalFormat::CompressedSRGB8Alpha8ETC2EAC>
		CompressedSRGB8Alpha8ETC2EAC;
	Transform<PixelDataInternalFormat::CompressedR11EAC>
		CompressedR11EAC;
	Transform<PixelDataInternalFormat::CompressedSignedR11EAC>
		CompressedSignedR11EAC;
	Transform<PixelDataInternalFormat::CompressedRG11EAC>
		CompressedRG11EAC;
	Transform<PixelDataInternalFormat::CompressedSignedRG11EAC>
		CompressedSignedRG11EAC;
};

} // namespace enums
#endif
//]

