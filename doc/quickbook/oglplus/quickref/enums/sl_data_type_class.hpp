//  File doc/quickbook/oglplus/quickref/enums/sl_data_type_class.hpp
//
//  Automatically generated file, DO NOT modify manually.
//  Edit the source 'source/enums/oglplus/sl_data_type.txt'
//  or the 'source/enums/make_enum.py' script instead.
//
//  Copyright 2010-2015 Matus Chochlik.
//  Distributed under the Boost Software License, Version 1.0.
//  See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt
//
//[oglplus_enums_sl_data_type_class
#if !__OGLPLUS_NO_ENUM_VALUE_CLASSES
namespace enums {

template <typename Base, template<__SLDataType> class Transform>
class __EnumToClass<Base, __SLDataType, Transform> /*<
Specialization of __EnumToClass for the __SLDataType enumeration.
>*/
 : public Base
{
public:
	EnumToClass(void);
	EnumToClass(Base&& base);

	Transform<SLDataType::Float>
		Float;
	Transform<SLDataType::FloatVec2>
		FloatVec2;
	Transform<SLDataType::FloatVec3>
		FloatVec3;
	Transform<SLDataType::FloatVec4>
		FloatVec4;
	Transform<SLDataType::Double>
		Double;
	Transform<SLDataType::DoubleVec2>
		DoubleVec2;
	Transform<SLDataType::DoubleVec3>
		DoubleVec3;
	Transform<SLDataType::DoubleVec4>
		DoubleVec4;
	Transform<SLDataType::Int>
		Int;
	Transform<SLDataType::IntVec2>
		IntVec2;
	Transform<SLDataType::IntVec3>
		IntVec3;
	Transform<SLDataType::IntVec4>
		IntVec4;
	Transform<SLDataType::UnsignedInt>
		UnsignedInt;
	Transform<SLDataType::UnsignedIntVec2>
		UnsignedIntVec2;
	Transform<SLDataType::UnsignedIntVec3>
		UnsignedIntVec3;
	Transform<SLDataType::UnsignedIntVec4>
		UnsignedIntVec4;
	Transform<SLDataType::Bool>
		Bool;
	Transform<SLDataType::BoolVec2>
		BoolVec2;
	Transform<SLDataType::BoolVec3>
		BoolVec3;
	Transform<SLDataType::BoolVec4>
		BoolVec4;
	Transform<SLDataType::FloatMat2>
		FloatMat2;
	Transform<SLDataType::FloatMat3>
		FloatMat3;
	Transform<SLDataType::FloatMat4>
		FloatMat4;
	Transform<SLDataType::FloatMat2x3>
		FloatMat2x3;
	Transform<SLDataType::FloatMat2x4>
		FloatMat2x4;
	Transform<SLDataType::FloatMat3x2>
		FloatMat3x2;
	Transform<SLDataType::FloatMat3x4>
		FloatMat3x4;
	Transform<SLDataType::FloatMat4x2>
		FloatMat4x2;
	Transform<SLDataType::FloatMat4x3>
		FloatMat4x3;
	Transform<SLDataType::DoubleMat2>
		DoubleMat2;
	Transform<SLDataType::DoubleMat3>
		DoubleMat3;
	Transform<SLDataType::DoubleMat4>
		DoubleMat4;
	Transform<SLDataType::DoubleMat2x3>
		DoubleMat2x3;
	Transform<SLDataType::DoubleMat2x4>
		DoubleMat2x4;
	Transform<SLDataType::DoubleMat3x2>
		DoubleMat3x2;
	Transform<SLDataType::DoubleMat3x4>
		DoubleMat3x4;
	Transform<SLDataType::DoubleMat4x2>
		DoubleMat4x2;
	Transform<SLDataType::DoubleMat4x3>
		DoubleMat4x3;
	Transform<SLDataType::Sampler1D>
		Sampler1D;
	Transform<SLDataType::Sampler2D>
		Sampler2D;
	Transform<SLDataType::Sampler3D>
		Sampler3D;
	Transform<SLDataType::SamplerCube>
		SamplerCube;
	Transform<SLDataType::Sampler1DShadow>
		Sampler1DShadow;
	Transform<SLDataType::Sampler2DShadow>
		Sampler2DShadow;
	Transform<SLDataType::Sampler1DArray>
		Sampler1DArray;
	Transform<SLDataType::Sampler2DArray>
		Sampler2DArray;
	Transform<SLDataType::SamplerCubeMapArray>
		SamplerCubeMapArray;
	Transform<SLDataType::Sampler1DArrayShadow>
		Sampler1DArrayShadow;
	Transform<SLDataType::Sampler2DArrayShadow>
		Sampler2DArrayShadow;
	Transform<SLDataType::Sampler2DMultisample>
		Sampler2DMultisample;
	Transform<SLDataType::Sampler2DMultisampleArray>
		Sampler2DMultisampleArray;
	Transform<SLDataType::SamplerCubeShadow>
		SamplerCubeShadow;
	Transform<SLDataType::SamplerCubeMapArrayShadow>
		SamplerCubeMapArrayShadow;
	Transform<SLDataType::SamplerBuffer>
		SamplerBuffer;
	Transform<SLDataType::Sampler2DRect>
		Sampler2DRect;
	Transform<SLDataType::Sampler2DRectShadow>
		Sampler2DRectShadow;
	Transform<SLDataType::IntSampler1D>
		IntSampler1D;
	Transform<SLDataType::IntSampler2D>
		IntSampler2D;
	Transform<SLDataType::IntSampler3D>
		IntSampler3D;
	Transform<SLDataType::IntSamplerCube>
		IntSamplerCube;
	Transform<SLDataType::IntSampler1DArray>
		IntSampler1DArray;
	Transform<SLDataType::IntSampler2DArray>
		IntSampler2DArray;
	Transform<SLDataType::IntSamplerCubeMapArray>
		IntSamplerCubeMapArray;
	Transform<SLDataType::IntSampler2DMultisample>
		IntSampler2DMultisample;
	Transform<SLDataType::IntSampler2DMultisampleArray>
		IntSampler2DMultisampleArray;
	Transform<SLDataType::IntSamplerBuffer>
		IntSamplerBuffer;
	Transform<SLDataType::IntSampler2DRect>
		IntSampler2DRect;
	Transform<SLDataType::UnsignedIntSampler1D>
		UnsignedIntSampler1D;
	Transform<SLDataType::UnsignedIntSampler2D>
		UnsignedIntSampler2D;
	Transform<SLDataType::UnsignedIntSampler3D>
		UnsignedIntSampler3D;
	Transform<SLDataType::UnsignedIntSamplerCube>
		UnsignedIntSamplerCube;
	Transform<SLDataType::UnsignedIntSampler1DArray>
		UnsignedIntSampler1DArray;
	Transform<SLDataType::UnsignedIntSampler2DArray>
		UnsignedIntSampler2DArray;
	Transform<SLDataType::UnsignedIntSamplerCubeMapArray>
		UnsignedIntSamplerCubeMapArray;
	Transform<SLDataType::UnsignedIntSampler2DMultisample>
		UnsignedIntSampler2DMultisample;
	Transform<SLDataType::UnsignedIntSampler2DMultisampleArray>
		UnsignedIntSampler2DMultisampleArray;
	Transform<SLDataType::UnsignedIntSamplerBuffer>
		UnsignedIntSamplerBuffer;
	Transform<SLDataType::UnsignedIntSampler2DRect>
		UnsignedIntSampler2DRect;
	Transform<SLDataType::Image1D>
		Image1D;
	Transform<SLDataType::Image2D>
		Image2D;
	Transform<SLDataType::Image3D>
		Image3D;
	Transform<SLDataType::Image2DRect>
		Image2DRect;
	Transform<SLDataType::ImageCube>
		ImageCube;
	Transform<SLDataType::ImageBuffer>
		ImageBuffer;
	Transform<SLDataType::Image1DArray>
		Image1DArray;
	Transform<SLDataType::Image2DArray>
		Image2DArray;
	Transform<SLDataType::Image2DMultisample>
		Image2DMultisample;
	Transform<SLDataType::Image2DMultisampleArray>
		Image2DMultisampleArray;
	Transform<SLDataType::IntImage1D>
		IntImage1D;
	Transform<SLDataType::IntImage2D>
		IntImage2D;
	Transform<SLDataType::IntImage3D>
		IntImage3D;
	Transform<SLDataType::IntImage2DRect>
		IntImage2DRect;
	Transform<SLDataType::IntImageCube>
		IntImageCube;
	Transform<SLDataType::IntImageBuffer>
		IntImageBuffer;
	Transform<SLDataType::IntImage1DArray>
		IntImage1DArray;
	Transform<SLDataType::IntImage2DArray>
		IntImage2DArray;
	Transform<SLDataType::IntImage2DMultisample>
		IntImage2DMultisample;
	Transform<SLDataType::IntImage2DMultisampleArray>
		IntImage2DMultisampleArray;
	Transform<SLDataType::UnsignedIntImage1D>
		UnsignedIntImage1D;
	Transform<SLDataType::UnsignedIntImage2D>
		UnsignedIntImage2D;
	Transform<SLDataType::UnsignedIntImage3D>
		UnsignedIntImage3D;
	Transform<SLDataType::UnsignedIntImage2DRect>
		UnsignedIntImage2DRect;
	Transform<SLDataType::UnsignedIntImageCube>
		UnsignedIntImageCube;
	Transform<SLDataType::UnsignedIntImageBuffer>
		UnsignedIntImageBuffer;
	Transform<SLDataType::UnsignedIntImage1DArray>
		UnsignedIntImage1DArray;
	Transform<SLDataType::UnsignedIntImage2DArray>
		UnsignedIntImage2DArray;
	Transform<SLDataType::UnsignedIntImage2DMultisample>
		UnsignedIntImage2DMultisample;
	Transform<SLDataType::UnsignedIntImage2DMultisampleArray>
		UnsignedIntImage2DMultisampleArray;
	Transform<SLDataType::UnsignedIntAtomicCounter>
		UnsignedIntAtomicCounter;
	Transform<SLDataType::None>
		None;
};

} // namespace enums
#endif
//]

